colorlist= c(brewer.pal(9, 'Set1'), brewer.pal(8, 'Set2'),brewer.pal(12, 'Set3'),brewer.pal(12, 'Paired'))
switch(cluster,
none={
net_groups=list(membership=rep(1,vcount(bsk.network)))},
optimal={
net_groups <- cluster_optimal(bsk.network)},
louvain={
net_groups <- cluster_louvain(bsk.network)},
infomap={
net_groups <- cluster_infomap(bsk.network)},
edge_betweenness={
net_groups <- cluster_edge_betweenness(bsk.network)},
walktrap={
net_groups <- cluster_walktrap(bsk.network)},
## default statement
{cat("\nUnknown cluster argument. Using default algorithm\n")
net_groups <- cluster_walktrap(bsk.network)}
)
V(bsk.network)$color <- colorlist[net_groups$membership]
### set egde intra-class colors
V(bsk.network)$community <- net_groups$membership
El=as.data.frame(get.edgelist(bsk.network,names=F))
E(bsk.network)$color <- apply(El, 1, function(x){
colorlist= c(brewer.pal(9, 'Set1'), brewer.pal(8, 'Set2'),brewer.pal(12, 'Set3'),brewer.pal(12, 'Paired'))
if (V(bsk.network)$community[x[1]] == V(bsk.network)$community[x[2]]){
C=colorlist[V(bsk.network)$community[x[1]]]
}else{C='#E8E8E8'}
return(C)
})
### end
cl=list()
cl$bsk.network=bsk.network
cl$net_groups=net_groups
return(cl)
}
###############
DF <-read_rds("DFbib.rds") %>% mutate(AU = str_replace_all(string = AU, pattern = "[\U4E00-\U9FFF\U3000-\U303F]", replacement = ""), AU = str_replace_all(string = AU, pattern = "\\[|\\]", replacement = "")) %>% mutate(AU = str_trim(AU)) %>% mutate(AU = str_split(AU, " ", simplify = T)[,1]) %>%  mutate(AU = str_replace_all(string =AU, pattern = "[^[:alnum:]]", replacement = ""))
NewDF <- list()
for(i in 1:nrow(DF)){
NewDF[[i]] <- data.frame(from = DF$TI[i], to = as.character(str_split(DF$CR[i], pattern = ";", simplify = T)), DOI_From = DF$DI[i], paradigm = DF$paradigm[i]) %>% dplyr::filter(to != "")
message(paste(i, "of", nrow(DF)))
}
NewDF <- bind_rows(NewDF) %>% mutate(DOI_to = str_trim(str_split(to, "DOI", simplify = T)[,2])) %>% mutate(DOI_to = str_remove(DOI_to, "\\.$"))
for (i in 1:nrow(NewDF)){
NewDF$FirstAu[i] <- str_replace_all(string = NewDF$to[i], pattern = "[\U4E00-\U9FFF\U3000-\U303F]", replacement = "")
NewDF$FirstAu[i] <- str_replace_all(string = NewDF$FirstAu[i], pattern = "\\[|\\]", replacement = "")
NewDF$FirstAu[i] <- str_split(str_trim(NewDF$FirstAu[i]), " ", simplify = T)[1]
NewDF$FirstAu[i] <- str_replace_all(string = NewDF$FirstAu[i], pattern = "[^[:alnum:]]", replacement = "")
NewDF$Year[i] <- as.numeric(paste0(str_extract_all(NewDF$to[i], "\\d", simplify = F)[[1]][c(1:4)], collapse = ""))
print(i)
}
#key3 <- list()
#for (i in 1:nrow(DF)){
#  key3[[i]] <- try(data.frame(from =DF$TI[i],DOI = DF$DI[i], Value = dplyr::filter(NewDF, str_detect(FirstAu, pattern = str_split(DF$AU[i], " ", simplify = T)[1]))$to[1], paradigm = DF$paradigm[i]))
#}
#cond <- sapply(key3, function(x) class(x) != "try-error")
#key3 <- key3[cond]
#key3 <- bind_rows(key3) %>% filter(!is.na(Value))
#NewDF3 <- NewDF %>% filter(to %in% key3$Value)
### en teoría el mas correcto
key4 <- list()
for (i in 1:nrow(DF)){
key4[[i]] <- try(data.frame(from =DF$TI[i],DOI = DF$DI[i], Value = dplyr::filter(NewDF, Year == DF$PY[i] & str_detect(FirstAu, pattern = str_split(DF$AU[i], " ", simplify = T)[1]))$to[1], paradigm = DF$paradigm[i]))
}
cond <- sapply(key4, function(x) class(x) != "try-error")
key4 <- key4[cond]
key4 <- bind_rows(key4) %>% filter(!is.na(Value)) %>% rename(Title = from)
##Key4 sería el dataframe de nodos y newdf3 el de los edges
NewDF4 <- NewDF %>% filter(to %in% key4$Value)
for (i in 1:nrow(NewDF4)){
NewDF4$to[i] <- dplyr::filter(key4, Value == NewDF4$to[i])$Title
}
#####
write_csv(NewDF4, "NewDF4.csv")
##########
NewNewDF4 <- read_csv("NewDF4.csv")
g <- graph_from_data_frame(NewNewDF4, directed=TRUE)
deg <- degree(g, mode = "all")
V(g)$deg <- deg
g <- delete.vertices(g, which(deg < 1))
### Para agregar paradigma
key4 <- key4 %>% rename(name = Title)
TidyNet <- as_tbl_graph(g) %>% activate(nodes)
red <-ggraph(TidyNet, layout="graphopt") + geom_node_point(aes(color = paradigm),  size = 4) + geom_edge_link(arrow = arrow(length = unit(3, 'mm'))) + theme_graph()
red
TidyNet <- as_tbl_graph(g) %>% activate(nodes) %>% full_join(key4)
red <-ggraph(TidyNet, layout="graphopt") + geom_node_point(aes(color = paradigm),  size = 4) + geom_edge_link(arrow = arrow(length = unit(3, 'mm'))) + theme_graph()
red
a <- as_tbl_graph(g) %>% activate(nodes) %>% full_join(key4) %>% as_tibble()
View(a)
b <- as_tbl_graph(g) %>% activate(edges) %>% full_join(key4) %>% as_tibble()
b
b <- as_tbl_graph(g) %>% activate(edges) %>% as_tibble()
View(b)
##########
NewDF4 <- read_csv("NewDF4.csv") %>% dplyr::filter(from != to)
g <- graph_from_data_frame(NewDF4, directed=TRUE)
deg <- degree(g, mode = "all")
V(g)$deg <- deg
g <- delete.vertices(g, which(deg < 1))
key4 <- key4 %>% rename(name = Title)
TidyNet <- as_tbl_graph(g) %>% activate(nodes) %>% full_join(key4)
red <-ggraph(TidyNet, layout="graphopt") + geom_node_point(aes(color = paradigm),  size = 4) + geom_edge_link(arrow = arrow(length = unit(3, 'mm'))) + theme_graph()
red
#armado de redes citacion
library(tidyverse)
library(tidygraph)
library(ggraph)
library(igraph)
library(Matrix)
library(RColorBrewer)
library(bibliometrix)
library(readr)
clusteringNetwork <- function(bsk.network,cluster){
colorlist= c(brewer.pal(9, 'Set1'), brewer.pal(8, 'Set2'),brewer.pal(12, 'Set3'),brewer.pal(12, 'Paired'))
switch(cluster,
none={
net_groups=list(membership=rep(1,vcount(bsk.network)))},
optimal={
net_groups <- cluster_optimal(bsk.network)},
louvain={
net_groups <- cluster_louvain(bsk.network)},
infomap={
net_groups <- cluster_infomap(bsk.network)},
edge_betweenness={
net_groups <- cluster_edge_betweenness(bsk.network)},
walktrap={
net_groups <- cluster_walktrap(bsk.network)},
## default statement
{cat("\nUnknown cluster argument. Using default algorithm\n")
net_groups <- cluster_walktrap(bsk.network)}
)
V(bsk.network)$color <- colorlist[net_groups$membership]
### set egde intra-class colors
V(bsk.network)$community <- net_groups$membership
El=as.data.frame(get.edgelist(bsk.network,names=F))
E(bsk.network)$color <- apply(El, 1, function(x){
colorlist= c(brewer.pal(9, 'Set1'), brewer.pal(8, 'Set2'),brewer.pal(12, 'Set3'),brewer.pal(12, 'Paired'))
if (V(bsk.network)$community[x[1]] == V(bsk.network)$community[x[2]]){
C=colorlist[V(bsk.network)$community[x[1]]]
}else{C='#E8E8E8'}
return(C)
})
### end
cl=list()
cl$bsk.network=bsk.network
cl$net_groups=net_groups
return(cl)
}
###############
DF <-read_rds("DFbib.rds") %>% mutate(AU = str_replace_all(string = AU, pattern = "[\U4E00-\U9FFF\U3000-\U303F]", replacement = ""), AU = str_replace_all(string = AU, pattern = "\\[|\\]", replacement = "")) %>% mutate(AU = str_trim(AU)) %>% mutate(AU = str_split(AU, " ", simplify = T)[,1]) %>%  mutate(AU = str_replace_all(string =AU, pattern = "[^[:alnum:]]", replacement = ""))
NewDF <- list()
for(i in 1:nrow(DF)){
NewDF[[i]] <- data.frame(from = DF$TI[i], to = as.character(str_split(DF$CR[i], pattern = ";", simplify = T)), DOI_From = DF$DI[i], paradigm = DF$paradigm[i]) %>% dplyr::filter(to != "")
message(paste(i, "of", nrow(DF)))
}
NewDF <- bind_rows(NewDF) %>% mutate(DOI_to = str_trim(str_split(to, "DOI", simplify = T)[,2])) %>% mutate(DOI_to = str_remove(DOI_to, "\\.$"))
for (i in 1:nrow(NewDF)){
NewDF$FirstAu[i] <- str_replace_all(string = NewDF$to[i], pattern = "[\U4E00-\U9FFF\U3000-\U303F]", replacement = "")
NewDF$FirstAu[i] <- str_replace_all(string = NewDF$FirstAu[i], pattern = "\\[|\\]", replacement = "")
NewDF$FirstAu[i] <- str_split(str_trim(NewDF$FirstAu[i]), " ", simplify = T)[1]
NewDF$FirstAu[i] <- str_replace_all(string = NewDF$FirstAu[i], pattern = "[^[:alnum:]]", replacement = "")
NewDF$Year[i] <- as.numeric(paste0(str_extract_all(NewDF$to[i], "\\d", simplify = F)[[1]][c(1:4)], collapse = ""))
print(i)
}
#key3 <- list()
#for (i in 1:nrow(DF)){
#  key3[[i]] <- try(data.frame(from =DF$TI[i],DOI = DF$DI[i], Value = dplyr::filter(NewDF, str_detect(FirstAu, pattern = str_split(DF$AU[i], " ", simplify = T)[1]))$to[1], paradigm = DF$paradigm[i]))
#}
#cond <- sapply(key3, function(x) class(x) != "try-error")
#key3 <- key3[cond]
#key3 <- bind_rows(key3) %>% filter(!is.na(Value))
#NewDF3 <- NewDF %>% filter(to %in% key3$Value)
### en teoría el mas correcto
key4 <- list()
for (i in 1:nrow(DF)){
key4[[i]] <- try(data.frame(from =DF$TI[i],DOI = DF$DI[i], Value = dplyr::filter(NewDF, Year == DF$PY[i] & str_detect(FirstAu, pattern = str_split(DF$AU[i], " ", simplify = T)[1]))$to[1], paradigm = DF$paradigm[i]))
}
cond <- sapply(key4, function(x) class(x) != "try-error")
key4 <- key4[cond]
key4 <- bind_rows(key4) %>% filter(!is.na(Value)) %>% rename(Title = from)
##Key4 sería el dataframe de nodos y newdf3 el de los edges
NewDF4 <- NewDF %>% filter(to %in% key4$Value)
for (i in 1:nrow(NewDF4)){
NewDF4$to[i] <- dplyr::filter(key4, Value == NewDF4$to[i])$Title
}
#####
write_csv(NewDF4, "NewDF4.csv")
##########
NewDF4 <- read_csv("NewDF4.csv") %>% dplyr::filter(from != to)
g <- graph_from_data_frame(NewDF4, directed=TRUE)
deg <- degree(g, mode = "all")
V(g)$deg <- deg
g <- delete.vertices(g, which(deg < 1))
### Para agregar paradigma
key4 <- key4 %>% rename(name = Title)
TidyNet <- as_tbl_graph(g) %>% activate(nodes) %>% full_join(key4)
red <-ggraph(TidyNet, layout="graphopt") + geom_node_point(aes(color = paradigm),  size = 4) + geom_edge_link(arrow = arrow(length = unit(3, 'mm'))) + theme_graph()
saveRDS(red, "red.rds")
red
b <- as_tbl_graph(g) %>% activate(edges) %>% as_tibble()
a <- as_tbl_graph(g) %>% activate(nodes) %>% full_join(key4) %>% as_tibble()
View(a)
View(b)
View(NewDF)
knitr::opts_chunk$set(echo = FALSE, comment = FALSE, warning = FALSE, message = FALSE)
library(ggplot2)
library(forcats)
library(gtable)
library(grid)
library(gridExtra)
library(tidyverse)
library(ggpubr)
library(choroplethr)
library(shades)
library(extrafont)
library(ggraph)
library(tidygraph)
library(igraph)
library(Matrix)
library(RColorBrewer)
library(bibliometrix)
library(readr)
library(tidyverse)
#Articulos_final <- read_delim("G:/Mi unidad/Documentos Yoryi/Documents yoryi/Doctorado Tesis/Review Urban ecology/Coastal urban ecology review/Articulos_final.csv", ";", escape_double = FALSE, trim_ws = TRUE) %>% mutate(paradigm= fct_relevel(paradigm, "in", "of", "for"))
Articulos_final <- read_csv("Articulos_al2020.csv")
library(knitr)
include_graphics("/home/giorgia/Documents/Doctorado tesis/Review Urban ecology/Decision tree formato FEEmarzo2020.png")
146+48+46
library(ggplot2)
library(dplyr)
Forgraph<-Articulos_final %>% mutate(city_categ=case_when(city_size <500000~"Urban Areas", city_size>=500000 & city_size<1000000~"Small cities" , city_size>=1000000 & city_size<5000000~"Medium-sized Cities" , city_size>=5000000 & city_size<10000000~"Large Cities" , city_size>=10000000~"Megacities" )) %>% mutate(city_categ=fct_relevel(city_categ, "Urban Areas", "Small cities", "Medium-sized Cities", "Large Cities","Megacities" )) %>% filter(!is.na(city_categ))
library(ggplot2)
Articulos_final2 <- Articulos_final %>% filter(!is.na(city_size)) %>% group_by(study_country) %>% mutate(max_country=max(city_size, na.rm=TRUE))
View(Articulos_final)
colnames(Articulos_final)
library(ggplot2)
library(dplyr)
Forgraph<-Articulos_final %>% mutate(city_categ=case_when(city size <500000~"Urban Areas", city size>=500000 & city size<1000000~"Small cities" , city size>=1000000 & city size<5000000~"Medium-sized Cities" , city_size>=5000000 & city size<10000000~"Large Cities" , city size>=10000000~"Megacities" )) %>% mutate(city_categ=fct_relevel(city_categ, "Urban Areas", "Small cities", "Medium-sized Cities", "Large Cities","Megacities" )) %>% filter(!is.na(city_categ))
library(ggplot2)
library(dplyr)
Forgraph<-Articulos_final %>% mutate(city_categ=case_when(city size <500000~"Urban Areas", city size >=500000 & city size <1000000~"Small cities" , city size >=1000000 & city size <5000000~"Medium-sized Cities" , city size >=5000000 & city size <10000000~"Large Cities" , city size >=10000000~"Megacities" )) %>% mutate(city_categ=fct_relevel(city_categ, "Urban Areas", "Small cities", "Medium-sized Cities", "Large Cities","Megacities" )) %>% filter(!is.na(city_categ))
colnames(Articulos_final)
View(Articulos_final)
library(tidyverse)
#Articulos_final <- read_delim("G:/Mi unidad/Documentos Yoryi/Documents yoryi/Doctorado Tesis/Review Urban ecology/Coastal urban ecology review/Articulos_final.csv", ";", escape_double = FALSE, trim_ws = TRUE) %>% mutate(paradigm= fct_relevel(paradigm, "in", "of", "for"))
Articulos_final <- read_rds("Articulos_al2020.RDS")
View(Articulos_final)
Articulos_final <- Articulos_final %>% step_rename(`city size`=city_size)
library(dplyr)
Articulos_final <- Articulos_final %>% step_rename(`city size`=city_size)
Articulos_final <- Articulos_final %>% rename(`city size`=city_size)
library(tidyverse)
#Articulos_final <- read_delim("G:/Mi unidad/Documentos Yoryi/Documents yoryi/Doctorado Tesis/Review Urban ecology/Coastal urban ecology review/Articulos_final.csv", ";", escape_double = FALSE, trim_ws = TRUE) %>% mutate(paradigm= fct_relevel(paradigm, "in", "of", "for"))
Articulos_final <- read_rds("Articulos_al2020.RDS")
library(ggplot2)
Articulos_final2 <- Articulos_final %>% mutate(study_model_subject= case_when(study_model %in% c("Amphibians", "Bacteria", "Birds",
"Fishes",  "Insects", "Lichens", "Mammals", "Marine invertebrates",  "Plants", "Invertebrates", "Antibiotics")~"Biological",
study_model %in% c("Antropogenic construction", "Harbours", "Particle concentrations", "Inorganic matter",
"Physical risk models",  "Rainfall", "Seawater", "Spatial data", "Temperature", "Water flow", "Waves", "Engineered infraestructure", "Aerosol", "Particulate matter")~"Physical",
study_model %in% c("Historic", "Others", "Demography", "Economy", "Health", "Perceptions", "Health and risk prevention")~"Social",
study_model %in% c("Diversity", "Ecology", "Ecosystem services", "Environmental management", "Green areas", "Wetlands")~"Others"))
colnames(Articulos_final)
# Plot
#ggplot(Articulos_final, aes(fct_infreq(coastal_environment))) + geom_bar(aes(fill = SubArea))+ labs(y="Number of articles", x="Coastal environment")  +theme_classic() + theme(axis.text.x = element_text(angle=70, vjust= 1, hjust=1))+ theme(text=element_text(size=18,  family="Arial"))
ggplot(Articulos_final, aes(fct_infreq(coastal_environment))) + geom_bar()+ labs(y="Number of articles", x="Coastal environment")  +theme_classic() + theme(axis.text.x = element_text(angle=70, vjust= 1, hjust=1))+ theme(text=element_text(size=18,  family="Arial"))
library(dplyr)
library(knitr)
library(stringr)
Articulos_final2<- Articulos_final %>% mutate(study_country = str_to_lower(study_country))%>% mutate(study_country= str_replace(study_country, "usa", "united states of america"))%>% mutate(study_country= str_replace(study_country, "emiratos", "united arab emirates"))%>% mutate(study_country= str_replace(study_country, "korea del sur", "south korea"))%>% mutate(study_country= str_replace(study_country, "tanzania", "united republic of tanzania")) %>% mutate(study_country= str_replace(study_country, "the netherlands", "netherlands"))%>% mutate(study_country= str_replace(study_country, "uk", "united kingdom"))%>% mutate(study_country= str_replace(study_country, "brasil", "brazil"))
Articulos_final2$paradigm <- paste0(Articulos_final$paradigm, "_the_city")
resumen_country <- Articulos_final2 %>% mutate(paradigm = paste0(Paradigm, paradigm)) %>% group_by(study_country, paradigm) %>% summarise(N=n())
library(dplyr)
library(knitr)
library(stringr)
Articulos_final2<- Articulos_final %>% mutate(study_country = str_to_lower(study_country))%>% mutate(study_country= str_replace(study_country, "usa", "united states of america"))%>% mutate(study_country= str_replace(study_country, "emiratos", "united arab emirates"))%>% mutate(study_country= str_replace(study_country, "korea del sur", "south korea"))%>% mutate(study_country= str_replace(study_country, "tanzania", "united republic of tanzania")) %>% mutate(study_country= str_replace(study_country, "the netherlands", "netherlands"))%>% mutate(study_country= str_replace(study_country, "uk", "united kingdom"))%>% mutate(study_country= str_replace(study_country, "brasil", "brazil"))
Articulos_final2$paradigm <- paste0(Articulos_final$paradigm, "_the_city")
resumen_country <- Articulos_final2 %>% mutate(paradigm = paste0(paradigm, paradigm)) %>% group_by(study_country, paradigm) %>% summarise(N=n())
library(tidyr)
resumen_country<- resumen_country %>% spread(key= paradigm, value=N)
library(choroplethr)
resumen_country_in <- resumen_country %>% dplyr::select(study_country, in_the_city)%>% rename(region=study_country, value=in_the_city)
library(tidyverse)
Tendencias<- Articulos_final %>% group_by(Paradigm, publication_year) %>% summarise(N = n())
library(tidyverse)
Tendencias<- Articulos_final %>% group_by(paradigm, publication_year) %>% summarise(N = n())
library(ggplot2)
#ggplot(Tendencias, aes(x = publication_year, y=N))+geom_point(aes(shape=paradigm))+
#  stat_smooth(aes(fill=paradigm, lty = paradigm),method = "lm", color ="black", formula=y ~ x + I(x^2))+
#  scale_fill_manual(name="New paradigm", labels=c("For the city", "In the city", "Of the city"),values=c("grey60", "grey55", "grey40"))+ scale_linetype_manual(name="New paradigm", labels=c("For the city", "In the city", "Of the city"),values=c(1:3))+ scale_shape_manual(name="New paradigm", labels=c("For the city", "In the city", "Of the city"),values=c(1:3)) + xlab("Publication year")+ ylab("Number of articles")+ theme_classic()
#name="New paradigm", labels=c("For the city", "In the city", "Of the city")
ggplot(Tendencias, aes(x = publication_year, y=N)) + geom_point(aes(shape = paradigm))+ stat_smooth(aes(fill=Paradigm),method = "lm", color ="black", formula=y ~ x + I(x^2),alpha=0.5)+ theme_classic()+ ylab("Number of articles")+ xlab("Publication year")+ scale_fill_brewer(palette="Dark2", name="Paradigm") + theme(text=element_text(size=18,  family="Arial"))
library(tidyverse)
Tendencias<- Articulos_final %>% group_by(paradigm, publication_year) %>% summarise(N = n())
library(ggplot2)
#ggplot(Tendencias, aes(x = publication_year, y=N))+geom_point(aes(shape=paradigm))+
#  stat_smooth(aes(fill=paradigm, lty = paradigm),method = "lm", color ="black", formula=y ~ x + I(x^2))+
#  scale_fill_manual(name="New paradigm", labels=c("For the city", "In the city", "Of the city"),values=c("grey60", "grey55", "grey40"))+ scale_linetype_manual(name="New paradigm", labels=c("For the city", "In the city", "Of the city"),values=c(1:3))+ scale_shape_manual(name="New paradigm", labels=c("For the city", "In the city", "Of the city"),values=c(1:3)) + xlab("Publication year")+ ylab("Number of articles")+ theme_classic()
#name="New paradigm", labels=c("For the city", "In the city", "Of the city")
ggplot(Tendencias, aes(x = publication_year, y=N)) + geom_point(aes(shape = paradigm))+ stat_smooth(aes(fill=paradigm),method = "lm", color ="black", formula=y ~ x + I(x^2),alpha=0.5)+ theme_classic()+ ylab("Number of articles")+ xlab("Publication year")+ scale_fill_brewer(palette="Dark2", name="Paradigm") + theme(text=element_text(size=18,  family="Arial"))
#ggplot(Tendencias, aes(x = publication_year, y=N)) + geom_point()+ stat_smooth(aes(fill=Paradigm, lty = Paradigm),method = "lm", color ="black", formula=y ~ x + I(x^2))+ theme_classic()+ ylab("Number of articles")+ xlab("Publication year")+ scale_fill_brewer(palette="Dark2", name="Paradigm")
library(ggplot2)
# BoxPlot
ggplot(Articulos_final, aes(y=city_size, x=paradigm)) + geom_boxplot(aes(fill=spatial_scale))+labs(y="City population", x="Paradigms")  +   scale_y_continuous(labels = scales::comma) + theme_classic() +scale_fill_brewer(palette="Dark2", name="Spatial Scale", labels=c("City size", "Infra-city", "Supra-city"))+geom_hline(yintercept = 2625373,lty=2)+ theme(text=element_text(size=18,  family="Arial"))
subj <- ggplot(Articulos_final, aes(paradigm)) + coord_flip() + geom_bar(aes(fill=theme), position="fill", color="black") +theme_classic() + scale_fill_brewer(palette="Dark2",  name="Study subject")+ theme(legend.title=element_blank()) + guides(fill = guide_legend(ncol = 1))+ theme(text=element_text(size=18,  family="Arial"))
disc <- ggplot(Articulos_final, aes(paradigm)) + coord_flip()+ geom_bar(aes(fill=disciplinary_focus), position="fill", color="black") + theme_classic() + scale_fill_brewer(palette="Dark2", name="Disciplinary focus", labels=c("Ecological", "Environmental policy", "Policy", "Social", "Socio-ecological", "Social policy")) + theme(legend.title=element_blank()) + guides(fill = guide_legend(ncol = 1))+ theme(text=element_text(size=18,  family="Arial"))
comp <- ggplot(Articulos_final, aes(paradigm)) + coord_flip() + geom_bar(aes(fill=component), position="fill", color="black")+ theme_classic()   + scale_fill_brewer(palette="Dark2", name="Study component", labels=c("Abiotic", "Abiotic and biotic", "Abiotic, biotic, and human","Abiotic and human", "Biotic", "Biotic and human", "Human")) + theme(legend.title=element_blank()) + guides(fill = guide_legend(ncol = 1))+ theme(text=element_text(size=18,  family="Arial"))
aprox <- ggplot(Articulos_final, aes(paradigm)) + coord_flip() + geom_bar(aes(fill=aproximation), position="fill", color="black") + theme_classic()+ scale_fill_brewer(palette="Dark2",  name="Approximation of study") + theme(legend.title=element_blank()) + guides(fill = guide_legend(ncol = 1)) + theme(text=element_text(size=18,  family="Arial"))
anal <- ggplot(Articulos_final, aes(paradigm)) + coord_flip() + geom_bar(aes(fill=type_of_analysis), position="fill", color="black") + theme_classic() +scale_fill_brewer(palette="Dark2", name="Type of analysis", labels=c("Modelling", "Other", "Qualitative", "Quantitative"))+ theme(legend.title=element_blank()) + guides(fill = guide_legend(ncol = 1))+ theme(text=element_text(size=18,  family="Arial"))
legend_1 <- get_legend(subj) %>% as_ggplot()
legend_2 <- get_legend(disc) %>% as_ggplot()
legend_3 <- get_legend(comp) %>% as_ggplot()
legend_4 <- get_legend(aprox) %>% as_ggplot()
legend_5 <- get_legend(anal) %>% as_ggplot()
lay <-  rbind(c(1,1,1,1,NA),
c(1,1,1,1,6),
c(1,1,1,1,NA),
c(2,2,2,2,NA),
c(2,2,2,2,7),
c(2,2,2,2,NA),
c(3,3,3,3,NA),
c(3,3,3,3,8),
c(3,3,3,3,NA),
c(4,4,4,4,NA),
c(4,4,4,4,9),
c(4,4,4,4,NA),
c(5,5,5,5,NA),
c(5,5,5,5,10),
c(5,5,5,5,NA))
grid.arrange(arrangeGrob(subj + theme(legend.position="none") + theme(axis.title.x = element_blank()) +xlab("Study subject"),
disc + theme(legend.position="none")+theme(axis.title.x = element_blank())+ xlab("Disciplinary focus"),
comp + theme(legend.position="none")+theme(axis.title.x = element_blank())+xlab("Study component"),
aprox + theme(legend.position="none")+theme(axis.title.x = element_blank())+xlab("Study approximation") ,
anal + theme(legend.position="none")+theme(axis.title.x = element_blank())+xlab("Type of analysis"),legend_1, legend_2, legend_3, legend_4, legend_5,layout_matrix = lay, left = text_grob("", rot = 90, vjust = 1, size =18)), bottom= text_grob("Proportion of articles", size =18))
subj <- ggplot(Articulos_final, aes(paradigm)) + coord_flip() + geom_bar(aes(fill=theme), position="fill", color="black") +theme_classic() + scale_fill_brewer(palette="Dark2",  name="Study subject")+ theme(legend.title=element_blank()) + guides(fill = guide_legend(ncol = 1))+ theme(text=element_text(size=18,  family="Arial"))
disc <- ggplot(Articulos_final, aes(paradigm)) + coord_flip()+ geom_bar(aes(fill=disciplinary_focus), position="fill", color="black") + theme_classic() + scale_fill_brewer(palette="Dark2", name="Disciplinary focus", labels=c("Ecological", "Environmental policy", "Policy", "Social", "Socio-ecological", "Social policy")) + theme(legend.title=element_blank()) + guides(fill = guide_legend(ncol = 1))+ theme(text=element_text(size=18,  family="Arial"))
comp <- ggplot(Articulos_final, aes(paradigm)) + coord_flip() + geom_bar(aes(fill=component), position="fill", color="black")+ theme_classic()   + scale_fill_brewer(palette="Dark2", name="Study component", labels=c("Abiotic", "Abiotic and biotic", "Abiotic, biotic, and human","Abiotic and human", "Biotic", "Biotic and human", "Human")) + theme(legend.title=element_blank()) + guides(fill = guide_legend(ncol = 1))+ theme(text=element_text(size=18,  family="Arial"))
aprox <- ggplot(Articulos_final, aes(paradigm)) + coord_flip() + geom_bar(aes(fill=aproximation), position="fill", color="black") + theme_classic()+ scale_fill_brewer(palette="Dark2",  name="Approximation of study") + theme(legend.title=element_blank()) + guides(fill = guide_legend(ncol = 1)) + theme(text=element_text(size=18,  family="Arial"))
anal <- ggplot(Articulos_final, aes(paradigm)) + coord_flip() + geom_bar(aes(fill=type_of_analysis), position="fill", color="black") + theme_classic() +scale_fill_brewer(palette="Dark2", name="Type of analysis", labels=c("Modelling", "Other", "Qualitative", "Quantitative"))+ theme(legend.title=element_blank()) + guides(fill = guide_legend(ncol = 1))+ theme(text=element_text(size=18,  family="Arial"))
legend_1 <- get_legend(subj) %>% as_ggplot()
legend_2 <- get_legend(disc) %>% as_ggplot()
legend_3 <- get_legend(comp) %>% as_ggplot()
legend_4 <- get_legend(aprox) %>% as_ggplot()
legend_5 <- get_legend(anal) %>% as_ggplot()
lay <-  rbind(c(1,1,1,1,NA),
c(1,1,1,1,6),
c(1,1,1,1,NA),
c(2,2,2,2,NA),
c(2,2,2,2,7),
c(2,2,2,2,NA),
c(3,3,3,3,NA),
c(3,3,3,3,8),
c(3,3,3,3,NA),
c(4,4,4,4,NA),
c(4,4,4,4,9),
c(4,4,4,4,NA),
c(5,5,5,5,NA),
c(5,5,5,5,10),
c(5,5,5,5,NA))
grid.arrange(arrangeGrob(subj + theme(legend.position="none") + theme(axis.title.x = element_blank()) +xlab("Study subject"),
disc + theme(legend.position="none")+theme(axis.title.x = element_blank())+ xlab("Disciplinary focus"),
comp + theme(legend.position="none")+theme(axis.title.x = element_blank())+xlab("Study component"),
aprox + theme(legend.position="none")+theme(axis.title.x = element_blank())+xlab("Study approximation") ,
anal + theme(legend.position="none")+theme(axis.title.x = element_blank())+xlab("Type of analysis"),legend_1, legend_2, legend_3, legend_4, legend_5,layout_matrix = lay, left = text_grob("", rot = 90, vjust = 1, size =18)), bottom= text_grob("Proportion of articles", size =18))
knitr::opts_chunk$set(echo = FALSE, comment = FALSE, warning = FALSE, message = FALSE)
library(ggplot2)
library(forcats)
library(gtable)
library(grid)
library(gridExtra)
library(tidyverse)
library(ggpubr)
library(choroplethr)
library(shades)
library(extrafont)
library(ggraph)
library(tidygraph)
library(igraph)
library(Matrix)
library(RColorBrewer)
library(bibliometrix)
library(readr)
library(tidyverse)
#Articulos_final <- read_delim("G:/Mi unidad/Documentos Yoryi/Documents yoryi/Doctorado Tesis/Review Urban ecology/Coastal urban ecology review/Articulos_final.csv", ";", escape_double = FALSE, trim_ws = TRUE) %>% mutate(paradigm= fct_relevel(paradigm, "in", "of", "for"))
Articulos_final <- read_rds("Articulos_al2020.RDS")
write_csv(Articulos_final, "Articulos_final.csv")
library(readr)
Articulos_final<- read_csv("Articulos_final.csv")
Art2019 <- read_csv("Articulos_final2019.csv")
View(Art2019)
Articulos_final<- read_csv("Articulos_final.csv")
Articulos_final2 <- read_csv("Articulos_final2.csv")
View(Articulos_final)
View(Articulos_final2)
colnames(Articulos_final)
colnames(Articulos_final) %in% colnames(Articulos_final2)
!(colnames(Articulos_final) %in% colnames(Articulos_final2))
!(colnames(Articulos_final) %in% colnames(Articulos_final2))
colnames(Articulos_final)[!(colnames(Articulos_final) %in% colnames(Articulos_final2))]
colnames(Articulos_final)
sort(colnames(Articulos_final))
sort(colnames(Articulos_final2))
View(Articulos_final2)
Articulos_final2 %>% group_by(spatial_scale, type_of_analysis, disciplinary_focus, component, Paradigm) %>% summarise(n=n()) %>% arrange(desc(n))
Articulos_final2 %>% group_by(spatial_scale, type_of_analysis, disciplinary_focus, component, Paradigm, affi_country,nat_disaster, pollution) %>% summarise(n=n()) %>% arrange(desc(n))
Articulos_final2 %>% group_by(spatial_scale, type_of_analysis, disciplinary_focus, component, Paradigm, affi_country,nat_disaster, pollution) %>% summarise(n=n()) %>% arrange(desc(n)) %>% pull(n)
Articulos_final2 %>% group_by(spatial_scale, type_of_analysis, disciplinary_focus, component, Paradigm, affi_country,nat_disaster, pollution, theme, aproximation) %>% summarise(n=n()) %>% arrange(desc(n)) %>% pull(n)
View(Articulos_final2)
Articulos_final2 <- read_csv("Articulos_final2.csv") %>% select(spatial_scale, type_of_analysis, disciplinary_focus, component, Paradigm, affi_country,nat_disaster, pollution, theme, aproximation, study_model) %>%
full_join(Articulos_final)
View(Articulos_final2)
sort(colnames(Articulos_final2))
sort(colnames(Articulos_final1))
sort(colnames(Articulos_final))
Articulos_final<- read_csv("Articulos_final.csv")
Articulos_final2 <- read_csv("Articulos_final2.csv") %>% select(spatial_scale, type_of_analysis, disciplinary_focus, component, Paradigm, affi_country,nat_disaster, pollution, theme, aproximation, study_model) %>%
rename(paradigm=Paradigm) %>%   full_join(Articulos_final)
View(Articulos_final2)
Articulos_final<- read_csv("Articulos_final.csv")
Articulos_final2 <- read_csv("Articulos_final2.csv") %>% select(spatial_scale, type_of_analysis, disciplinary_focus, component, Paradigm, affi_country,nat_disaster, pollution, theme, aproximation, study_model) %>%
rename(paradigm=Paradigm) %>%   full_join(Articulos_final) %>% dplyr::filter(!is.na(Title))
View(Articulos_final2)
library(readr)
Articulos_final2 <- read_csv("Articulos_final2.csv") %>% select(spatial_scale, type_of_analysis, disciplinary_focus, component, Paradigm, affi_country,nat_disaster, pollution, theme, aproximation, study_model) %>%
rename(paradigm=Paradigm)
Articulos_final<- read_csv("Articulos_final.csv") %>% full_join(Articulos_final2)
Articulos_final2 <- read_csv("Articulos_final2.csv") %>% select(spatial_scale, type_of_analysis, disciplinary_focus, component, Paradigm, affi_country,nat_disaster, pollution, theme, aproximation, study_model) %>%
rename(paradigm=Paradigm)
Articulos_final<- read_csv("Articulos_final.csv") %>% full_join(Articulos_final2) %>% dplyr::filter(is.na(Title))
Articulos_final<- read_csv("Articulos_final.csv")
Articulos_final2 <- read_csv("Articulos_final2.csv") %>% select(spatial_scale, type_of_analysis, disciplinary_focus, component, Paradigm, affi_country,nat_disaster, pollution, theme, aproximation, study_model) %>%
rename(paradigm=Paradigm)  %>% full_join(Articulos_final) %>% dplyr::filter(is.na(Title))
Articulos_final<- read_csv("Articulos_final.csv")
Articulos_final2 <- read_csv("Articulos_final2.csv") %>% select(spatial_scale, type_of_analysis, disciplinary_focus, component, Paradigm, affi_country,nat_disaster, pollution, theme, aproximation, study_model) %>%
rename(paradigm=Paradigm)  %>% full_join(Articulos_final) %>% dplyr::filter(is.na(Title))
Articulos_final<- read_csv("Articulos_final.csv")
Articulos_final2 <- read_csv("Articulos_final2.csv") %>% select(spatial_scale, type_of_analysis, disciplinary_focus, component, Paradigm, affi_country,nat_disaster, pollution, theme, aproximation, study_model) %>%
rename(paradigm=Paradigm) %>%   full_join(Articulos_final) %>% dplyr::filter(!is.na(Title))
Articulos_final<- read_csv("Articulos_final.csv")
Articulos_final2 <- read_csv("Articulos_final2.csv") %>% select(spatial_scale, type_of_analysis, disciplinary_focus, component, Paradigm, affi_country,nat_disaster, pollution, theme, aproximation, study_model) %>%
rename(paradigm=Paradigm) %>%   full_join(Articulos_final) %>% dplyr::filter(!is.na(Title))
View(Articulos_final2)
nrow(Articulos_final) - nrow(Articulos_final2)
Articulos_final2 %>% group_by(Title) %>% summarise(n = n()) %>% arrange(desc(n)) %>% pull(n)
Articulos_final2 <- read_csv("Articulos_final2.csv")
View(Articulos_final2)
Articulos_final2 <- read_csv("Articulos_final2.csv") %>% select(spatial_scale, type_of_analysis, disciplinary_focus, component, Paradigm, affi_country,nat_disaster, pollution, theme, aproximation, study_model) %>%
rename(paradigm=Paradigm) %>%   full_join(Articulos_final)
View(Articulos_final2)
View(Articulos_final2 %>% arrange(aproximation, Title))
View(Articulos_final2 %>% arrange(aproximation, Title, theme, pollution))
Articulos_final<- read_csv("Articulos_final.csv")
Articulos_final2 <- read_csv("Articulos_final2.csv") %>% select(spatial_scale, type_of_analysis, disciplinary_focus, component, Paradigm, affi_country,nat_disaster, pollution, theme, aproximation, study_model) %>%
rename(paradigm=Paradigm)
Articulos_final2$spatial_scale
unique(Articulos_final2$spatial_scale)
unique(Articulos_final$spatial_scale)
sort(unique(Articulos_final$spatial_scale))
sort(unique(Articulos_final2$spatial_scale))
identical(sort(unique(Articulos_final2$spatial_scale)),sort(unique(Articulos_final2$spatial_scale)))
identical(sort(unique(Articulos_final2$type_of_analysis)),sort(unique(Articulos_final2$type_of_analysis)))
identical(sort(unique(Articulos_final2$disciplinary_focus)),sort(unique(Articulos_final2$disciplinary_focus)))
identical(sort(unique(Articulos_final2$disciplinary_focus)),sort(unique(Articulos_final$disciplinary_focus)))
identical(sort(unique(Articulos_final2$disciplinary_focus)),sort(unique(Articulos_final$disciplinary_focus)))
###Para chequear
###Para chequear
identical(sort(unique(Articulos_final2$disciplinary_focus)),sort(unique(Articulos_final$disciplinary_focus)))
sort(unique(Articulos_final2$disciplinary_focus))
sort(unique(Articulos_final$disciplinary_focus))
identical(sort(unique(Articulos_final2$spatial_scale)),sort(unique(Articulos_final$spatial_scale)))
identical(sort(unique(Articulos_final2$type_of_analysis)),sort(unique(Articulos_final$type_of_analysis)))
identical(sort(unique(Articulos_final2$component)),sort(unique(Articulos_final$component)))
identical(sort(unique(Articulos_final2$paradigm)),sort(unique(Articulos_final$paradigm)))
identical(sort(unique(Articulos_final2$affi_country)),sort(unique(Articulos_final$affi_country)))
identical(sort(unique(Articulos_final2$nat_disaster)),sort(unique(Articulos_final$nat_disaster)))
identical(sort(unique(Articulos_final2$pollution)),sort(unique(Articulos_final$pollution)))
sort(unique(Articulos_final$pollution)))
sort(unique(Articulos_final$pollution))
sort(unique(Articulos_final2$pollution))
identical(sort(unique(Articulos_final2$theme)),sort(unique(Articulos_final$theme)))
sort(unique(Articulos_final$theme))
sort(unique(Articulos_final2$theme))
sort(unique(Articulos_final2$disciplinary_focus))
sort(unique(Articulos_final$disciplinary_focus))
sort(unique(Articulos_final$pollution))
sort(unique(Articulos_final2$pollution))
Articulos_final<- read_csv("Articulos_final.csv")
Articulos_final2 <- read_csv("Articulos_final2.csv")
View(Articulos_final)
Articulos_final<- read_csv("Articulos_final.csv") %>%
mutate(disciplinary_focus= str_replace(disciplinary_focus, "p", "sp")) %>%
mutate(pollution= str_replace(pollution, "Marine", "Aquatic")) %>%
mutate(theme= str_replace(theme, "Shoreline changes<U+00A0>", "Shoreline changes"))
Articulos_final2 <- read_csv("Articulos_final2.csv") %>% select(spatial_scale, type_of_analysis, disciplinary_focus, component, Paradigm, affi_country,nat_disaster, pollution, theme, aproximation, study_model) %>%
rename(paradigm=Paradigm) %>%  mutate(theme= str_replace(theme, "Shoreline changes\xa0", "Shoreline changes")) %>%
full_join(Articulos_final) %>% dplyr::filter(!is.na(Title))
275-238
###Para chequear
identical(sort(unique(Articulos_final2$disciplinary_focus)),sort(unique(Articulos_final$disciplinary_focus)))
###Para chequear
identical(sort(unique(Articulos_final2$pollution)),sort(unique(Articulos_final$pollution)))
identical(sort(unique(Articulos_final2$disciplinary_focus)),sort(unique(Articulos_final$disciplinary_focus)))
identical(sort(unique(Articulos_final2$theme)),sort(unique(Articulos_final$theme)))
identical(sort(unique(Articulos_final2$component)),sort(unique(Articulos_final$component)))
identical(sort(unique(Articulos_final2$affi_country)),sort(unique(Articulos_final$affi_country)))
identical(sort(unique(Articulos_final2$paradigm)),sort(unique(Articulos_final$paradigm)))
identical(sort(unique(Articulos_final2$spatial_scale)),sort(unique(Articulos_final$spatial_scale)))
identical(sort(unique(Articulos_final2$type_of_analysis)),sort(unique(Articulos_final$type_of_analysis)))
identical(sort(unique(Articulos_final2$aproximation)),sort(unique(Articulos_final$aproximation)))
identical(sort(unique(Articulos_final2$nat_disaster)),sort(unique(Articulos_final$nat_disaster)))
View(Articulos_final2)
275-238
